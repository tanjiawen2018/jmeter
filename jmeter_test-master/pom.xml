<?xml  version="1.0"  encoding="UTF-8"?>

<project  xmlns="http://maven.apache.org/POM/4.0.0"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0  http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yuying</groupId>
    <artifactId>jmeter</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>jmeter</name>
    <!--  FIXME  change  it  to  the  project's  website  -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- 指定jtl生成目录 -->
        <jmeter.result.jtl.dir>${project.build.directory}\jmeter\results</jmeter.result.jtl.dir>
        <jmeter.result.html.dir>${project.build.directory}\jmeter\html</jmeter.result.html.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!--  lock  down  plugins  versions  to  avoid  using  Maven  defaults  (may  be  moved  to  parent  pom)  -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <!--  see  http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging  -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <!-- 核心插件，用来执行jmx脚本-->
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>2.8.0</version>
                <configuration>
                    <!--jmeter-maven-plugin插件默认在每个jtl结果文件的文件名中添加时间戳。如果你不想要这个时间戳，可以通过设置标签来禁用。-->
                    <testResultsTimestamp>false</testResultsTimestamp>
                    <!--testResultsTimestamp标签默认为true，并且在文件开头添加时间戳。可以通过设置标签，来让时间戳出现在文件末尾-->
                    <appendResultsTimestamp>false</appendResultsTimestamp>
                    <downloadJMeterDependencies>false</downloadJMeterDependencies>
                    <!--使用<resultsFileFormat>设置结果文件的格式-->
                    <resultsFileFormat>xml</resultsFileFormat>
                    <generateReports>false</generateReports>
                    <!--使用<resultsDirectory>指定结果路径-->
                    <resultsDirectory>${jmeter.result.jtl.dir}</resultsDirectory>

                </configuration>
                <executions>
                    <execution>
                        <id>jmeter-tests</id>
                       <phase>verify</phase>
                        <goals>
                            <goal>jmeter</goal>
                        </goals>
                    <configuration>
                        <testFilesIncluded>
                            <jMeterTestFile>login.jmx</jMeterTestFile>
                        </testFilesIncluded>
                    </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--根据xsl模版把jtl文件转换成html，官网地址： http://www.mojohaus.org/xml-maven-plugin/examples/transform-saxon.html-->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <!--可以根据不同的模版，同时生成多个报告-->
                        <transformationSet>
                            <dir>${jmeter.result.jtl.dir}</dir>
                            <!--使用的模板文件，采用乔叶叶模版-->
                            <stylesheet>src\test\resources\jmeter.results.shanhe.me_qiaoyeye.xsl</stylesheet>
                            <!--输出html文件路径-->
                            <outputDir>${jmeter.result.html.dir}</outputDir>
                            <!-- jtl格式转成html -->
                            <fileMappers>
                                <fileMapper
                                        implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>${jmeter.result.jtl.dir}</dir>
                            <!--使用的模板文件，采用南风模版-->
                            <stylesheet>src\test\resources\jmeter-results-detail-report_30.xsl</stylesheet>
                            <!--输出html文件的路径-->
                            <outputDir>${jmeter.result.html.dir}</outputDir>
                            <!-- jtl转成html -->
                            <fileMappers>
                                <fileMapper
                                        implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
                <!-- using XSLT 2.0 -->
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>saxon</artifactId>
                        <version>8.7</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
